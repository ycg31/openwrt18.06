#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: makeconfig
on:
  release:
    types: published
  push:
#    branches:
#      - master
     paths:
       - '.github/workflows/makeconfig.yml'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
      - name: 自定义插件
        run: |
           rm    -rfv  package/lean/autocore
           cd package/diy
           tar   xvJf  luci-app-docker.tar.xz
           tar   xvJf  luci-app-koolddns.tar.xz
           tar   xvJf  luci-app-rclone.tar.xz
           tar   xvJf  autocore.tar.xz
           tar   xvJf  luci-app-nps.tar.xz
           tar   xvJf  luci-app-cpufreq.tar.xz
           git clone  https://github.com/Sweet-Fairy/openwrt-package
           git clone  https://github.com/Sweet-Fairy/luci-app-ssr-plus-Jo
            git clone -b lean  https://github.com/Sweet-Fairy/luci-app-ssr-plus-Jo package/luci-app-ssr-plus-lean    
           git clone  https://github.com/Leo-Jo-My/luci-app-vssr
           git clone  https://github.com/lisaac/luci-lib-docker.git package/luci-lib-docker
           git clone  https://github.com/lisaac/luci-app-dockerman.git package/luci-app-dockerman  
           # ==========ssr-plus-Jo   ssr-plus-lean不要一起编译  +vssr   ==========
           # ==========以上是示范如何加入tar.xz解包和拉github源码编译==========
      - name: 自定义配置文件1
        run: |
           cd package
           git clone   https://github.com/Lienol/openwrt-package   
           rm    -rfv  openwrt-package/package/v2ray-plugin
           rm    -rfv  openwrt-package/package/v2ray
           rm    -rfv  openwrt-package/package/simple-obfs
           rm    -rfv  openwrt-package/package/dns2socks
           rm    -rfv  openwrt-package/package/ipt2socks
           rm    -rfv  openwrt-package/package/shadowsocksr-libev
           rm    -rfv  ipt2socks
           
      - name: 自定义配置文件2
        run: |
           cd package/my
             rm    -rfv  chinadns-ng
             rm    -rfv  luci-app-passwall
             rm    -rfv  tcping    
             
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分=======================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #         =========================================
          #        |  # 取消编译VMware镜像:                   |
          #        |  cat >> .config <<EOF                   |
          #        |  # CONFIG_VMDK_IMAGES=y        |
          #        |  EOF                                    |
          #         =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
           cat >> .config <<EOF
           CONFIG_TARGET_x86=y
           CONFIG_TARGET_x86_64=y
           CONFIG_TARGET_x86_64_Generic=y
           EOF
          # 固件压缩:
            cat >> .config <<EOF
            CONFIG_TARGET_IMAGES_GZIP=y
            EOF
          # 编译UEFI固件:
            cat >> .config <<EOF
            CONFIG_EFI_IMAGES=y
            EOF
          # IPv6支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # EOF
          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF
          # USB3.0支持:
           cat >> .config <<EOF
           CONFIG_PACKAGE_kmod-usb-ohci=y
           CONFIG_PACKAGE_kmod-usb-ohci-pci=y
           CONFIG_PACKAGE_kmod-usb2=y
           CONFIG_PACKAGE_kmod-usb2-pci=y
           CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
           cat >> .config <<EOF
            CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-lib-docker=y
          # CONFIG_PACKAGE_luci-app-dockerman=y
            CONFIG_PACKAGE_luci-app-diskman=y
          # CONFIG_PACKAGE_luci-app-aliddns=y
          # CONFIG_PACKAGE_luci-app-rclone=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-koolddns=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-trojan-server=y
          # CONFIG_PACKAGE_luci-app-familycloud=y
          # CONFIG_PACKAGE_luci-app-smartinfo=y
          # CONFIG_PACKAGE_luci-app-syncthing=y
            CONFIG_PACKAGE_luci-app-syncdial=y
            CONFIG_PACKAGE_luci-app-ttyd=y
            CONFIG_PACKAGE_luci-app-mwan3=y
            CONFIG_PACKAGE_luci-app-mwan3helper=y
            CONFIG_PACKAGE_luci-app-openclash=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
            CONFIG_PACKAGE_luci-app-udpxy=y
            CONFIG_PACKAGE_luci-app-serverchan=y
          # CONFIG_PACKAGE_luci-app-usb-printer=y
            CONFIG_PACKAGE_luci-app-onliner=y
            CONFIG_PACKAGE_luci-app-nps=y
          # CONFIG_PACKAGE_luci-app-cpulimit=y
            CONFIG_PACKAGE_luci-app-netdata=y
          # CONFIG_PACKAGE_luci-app-cupsd=y
            CONFIG_PACKAGE_luci-app-unblockmusic=y
            CONFIG_PACKAGE_luci-app-qos=y
            CONFIG_PACKAGE_luci-app-advancedsetting=y
            CONFIG_PACKAGE_luci-app-clash=y
            CONFIG_PACKAGE_luci-app-qosv4=y
            CONFIG_PACKAGE_luci-app-samba=y
            CONFIG_PACKAGE_luci-app-smartdns=y
          # CONFIG_PACKAGE_kmod-tcp-bbr-mod=y
            CONFIG_PACKAGE_kmod-tcp-bbr-nanqinlang=y
            CONFIG_PACKAGE_luci-app-passwall=y 
            CONFIG_PACKAGE_luci-app-vssr=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_Shadowsocks_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_ShadowsocksR_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_Shadowsocks_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_ipt2socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_dnscrypt_proxy=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_dnsforwarder=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_ChinaDNS=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_haproxy=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_privoxy=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_simple-obfs=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_simple-obfs-server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_udpspeeder=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_udp2raw-tunnel=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_GoQuiet-client=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_GoQuiet-server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus-Jo_INCLUDE_v2ray-plugin=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_Shadowsocks=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_V2ray=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_Trojan=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_Kcptun=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_ShadowsocksR_Server=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_Shadowsocks_Server=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_ShadowsocksR_Socks=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_Shadowsocks_Socks=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_ipt2socks=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_dnscrypt_proxy=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_dnsforwarder=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_ChinaDNS=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_haproxy=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_privoxy=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_simple-obfs=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_simple-obfs-server=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_udpspeeder=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_udp2raw-tunnel=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_GoQuiet-client=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_GoQuiet-server=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_v2ray-plugin=y
            CONFIG_PACKAGE_luci-app-ssr-plus-lean_INCLUDE_redsocks2=y
            CONFIG_PACKAGE_luci-app-advanced-reboot=y
          # CONFIG_PACKAGE_luci-app-amule=y
            CONFIG_PACKAGE_luci-app-oaf=y
          # CONFIG_PACKAGE_luci-app-adblock=y
          # CONFIG_PACKAGE_luci-app-cd8021x=y
            CONFIG_PACKAGE_luci-app-chinadns=y
            CONFIG_PACKAGE_luci-app-cifs=y
            CONFIG_PACKAGE_luci-app-cifsd=y
          # CONFIG_PACKAGE_luci-app-banip=y
          # CONFIG_PACKAGE_luci-app-brook-server=y
          # CONFIG_PACKAGE_luci-app-commands=y
            CONFIG_PACKAGE_luci-app-control-mia=y
            CONFIG_PACKAGE_luci-app-control-timewol=y
            CONFIG_PACKAGE_luci-app-control-webrestriction=y
            CONFIG_PACKAGE_luci-app-control-weburl=y
            CONFIG_PACKAGE_luci-app-dnspod=y
            CONFIG_PACKAGE_luci-app-cpufreq=y
            CONFIG_PACKAGE_luci-app-filebrowser=y
            CONFIG_PACKAGE_luci-app-fileassistant=y
            CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          # CONFIG_PACKAGE_luci-app-mentohust=y
          # CONFIG_PACKAGE_luci-app-mjpg-streamer=y
          # CONFIG_PACKAGE_luci-app-n2n_v2=y
            CONFIG_PACKAGE_luci-app-nfs=y
          # CONFIG_PACKAGE_luci-app-ocserv=y
          # CONFIG_PACKAGE_luci-app-oscam=y
          # CONFIG_PACKAGE_luci-app-samba4=y
          # CONFIG_PACKAGE_luci-app-softethervpn5=y
          # CONFIG_PACKAGE_luci-app-speederv2=y
            CONFIG_PACKAGE_luci-app-ssr-libev-server=y
          # CONFIG_PACKAGE_luci-app-ssr-python-pro-server=y
          # CONFIG_PACKAGE_luci-app-transmission=y
          # CONFIG_PACKAGE_luci-app-wifischedule is not set
            CONFIG_LUCI_LANG_redsocks2=y
            CONFIG_LUCI_LANG_en=y
            CONFIG_LUCI_LANG_zh-tw=y
           EOF
          # LuCI主题:
           cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-Butterfly=y
            CONFIG_PACKAGE_luci-theme-Butterfly-dark=y
            CONFIG_PACKAGE_luci-theme-opentomcat=y
          # CONFIG_PACKAGE_luci-theme-opentomato=y
            CONFIG_PACKAGE_luci-theme-argon-mod=y
           EOF
          # 常用软件包:
           cat >> .config <<EOF
           CONFIG_PACKAGE_curl=y
           CONFIG_PACKAGE_htop=y
           CONFIG_PACKAGE_nano=y
           CONFIG_PACKAGE_screen=y
           CONFIG_PACKAGE_tree=y
           CONFIG_PACKAGE_vim-fuller=y
           CONFIG_PACKAGE_wget=y
           EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
           cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD=y
          # CONFIG_VMDK_IMAGES=y
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: 拷贝文件
        run: |
           mkdir -p ./myconfig
           cp ./.config ./myconfig/my.config
             
      - name: Upload config
        uses: actions/upload-artifact@master
        with:
          name: Config
          path: ./myconfig
          
